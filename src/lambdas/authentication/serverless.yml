service: abiliyo-authentication-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: backend
  memorySize: 1024

  apiGateway:
    minimumCompressionSize: 1024

  stage: dev
  region: ap-south-1

  environment:
    JWT_SECRET: ${env:JWT_SECRET}
    JWT_EXPIRATION_TIME: ${env:JWT_EXPIRATION_TIME}
    NODE_ENV: ${env:NODE_ENV}
    DB_DIALECT: ${env:DB_DIALECT}
    DB_NAME: ${env:DB_NAME}
    DB_USERNAME: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}

  vpc:
    securityGroupIds:
      - ${env:SECURITY_GROUP_ID}
    subnetIds:
      - ${env:SUBNET1_ID}
      - ${env:SUBNET2_ID}
      - ${env:SUBNET3_ID}
      - ${env:SUBNET4_ID}

# you can add packaging information here
package:
  individually: true

plugins:
  - serverless-domain-manager
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-sequelize-migrations

custom:
  domains:
    prod: api.abiliyo.com
    staging: staging-api.abiliyo.com
    dev: dev-api.abiliyo.com

  dotenv:
    path: ../../../.env

  migrationsPath: '../../../db/migrations'

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
   # environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
